########=====AWS EKS 생성후 작업 테스트[2025년1월12일(일)]가이드문서=====#######


[실습]=================================================================================================================================
1. 클러스터 이동 명령어 
aws eks --region ap-northeast-2 update-kubeconfig --name terraform-eks-cluster

2. kubectl 명령으로 설치결과 확인
$ kubectl get nodes
NAME                                                STATUS   ROLES    AGE   VERSION
ip-192-168-38-198.ap-northeast-2.compute.internal   Ready    <none>   28m   v1.19.6-eks-49a6c0
ip-192-168-4-22.ap-northeast-2.compute.internal     Ready    <none>   28m   v1.19.6-eks-49a6c0
ip-192-168-82-229.ap-northeast-2.compute.internal   Ready    <none>   28m   v1.19.6-eks-49a6c0

root@ip-10-250-1-234:~/dockerfile-folder# kubectl get pods -A
NAMESPACE     NAME                        READY   STATUS    RESTARTS   AGE
default       webserver-b64b4cd9f-4xqcb   1/1     Running   0          9m16s
default       webserver-b64b4cd9f-d88dp   1/1     Running   0          9m16s
default       webserver-b64b4cd9f-hbqb5   1/1     Running   0          9m16s
default       webserver-b64b4cd9f-nmvqq   1/1     Running   0          9m16s
default       webserver-b64b4cd9f-zms62   1/1     Running   0          9m16s
kube-system   aws-node-fkg4q              2/2     Running   0          56m
kube-system   aws-node-r7jd7              2/2     Running   0          56m
kube-system   coredns-6b46bd4fd9-2pkhw    1/1     Running   0          63m
kube-system   coredns-6b46bd4fd9-5rvzq    1/1     Running   0          63m
kube-system   kube-proxy-476l7            1/1     Running   0          56m
kube-system   kube-proxy-b8xlr            1/1     Running   0          56m

root@ip-10-250-1-234:~/dockerfile-folder# kubectl get pods --all-namespaces (자체 구축한 kubernetes cluster 차이점이 존재한다.)
NAMESPACE     NAME                        READY   STATUS    RESTARTS   AGE
default       webserver-b64b4cd9f-4xqcb   1/1     Running   0          11m
default       webserver-b64b4cd9f-d88dp   1/1     Running   0          11m
default       webserver-b64b4cd9f-hbqb5   1/1     Running   0          11m
default       webserver-b64b4cd9f-nmvqq   1/1     Running   0          11m
default       webserver-b64b4cd9f-zms62   1/1     Running   0          11m
kube-system   aws-node-fkg4q              2/2     Running   0          59m
kube-system   aws-node-r7jd7              2/2     Running   0          58m
kube-system   coredns-6b46bd4fd9-2pkhw    1/1     Running   0          65m
kube-system   coredns-6b46bd4fd9-5rvzq    1/1     Running   0          65m
kube-system   kube-proxy-476l7            1/1     Running   0          58m
kube-system   kube-proxy-b8xlr            1/1     Running   0          59m

=============================================================================(자체 구축한 kubernetes cluster 차이점이 존재한다.)
root@master:~# kubectl get pods --all-namespaces 
NAMESPACE     NAME                                         READY   STATUS    RESTARTS        AGE
kube-system   coredns-64897985d-f5glr                      1/1     Running   10 (130m ago)   11d
kube-system   coredns-64897985d-jqdrg                      1/1     Running   10 (130m ago)   11d
kube-system   etcd-master.example.com                      1/1     Running   12 (130m ago)   11d
kube-system   kube-apiserver-master.example.com            1/1     Running   12 (130m ago)   11d
kube-system   kube-controller-manager-master.example.com   1/1     Running   25 (130m ago)   11d
kube-system   kube-proxy-4nmw6                             1/1     Running   10 (129m ago)   10d
kube-system   kube-proxy-brhcf                             1/1     Running   13 (129m ago)   11d
kube-system   kube-proxy-gf5wj                             1/1     Running   12              11d
kube-system   kube-proxy-xqxql                             1/1     Running   12 (128m ago)   11d
kube-system   kube-scheduler-master.example.com            1/1     Running   25 (130m ago)   11d
kube-system   metrics-server-6f9c74757-ckk2t               1/1     Running   3 (128m ago)    2d23h
kube-system   weave-net-krk4t                              2/2     Running   22 (129m ago)   10d
kube-system   weave-net-m6k9m                              2/2     Running   28 (129m ago)   11d
kube-system   weave-net-pcrxn                              2/2     Running   28 (128m ago)   11d
kube-system   weave-net-xfvl5                              2/2     Running   32 (130m ago)   11

=============================================================================================================
3. 간단한 실행 실습
워커 노드 정보 보기
$ kubectl get nodes -o wide

Pod 배포 TEST. nginx 컨테이너 5개 실행하고 결과 확인
$ kubectl create  deployment webserver --image=nginx:1.14 --port=80  --replicas=5
$ kubectl get  pods -o wide
NAME                      READY   STATUS    RESTARTS   AGE   IP               NODE                                               NOMINATED NODE   READINESS GATES
webtest-fdf54587f-8mfrz   1/1      Running   0          28s   192.168.10.139   ip-192-168-2-91.ap-northeast-2.compute.internal    <none>           <none>
webtest-fdf54587f-d4pjc   1/1      Running   0          28s   192.168.39.104   ip-192-168-56-22.ap-northeast-2.compute.internal   <none>           <none>
webtest-fdf54587f-dqg55   1/1      Running   0          28s   192.168.13.27    ip-192-168-2-91.ap-northeast-2.compute.internal    <none>           <none>
webtest-fdf54587f-hs8zd   1/1      Running   0          28s   192.168.77.185   ip-192-168-70-30.ap-northeast-2.compute.internal   <none>           <none>
webtest-fdf54587f-pn549   1/1      Running   0          28s   192.168.83.249   ip-192-168-70-30.ap-northeast-2.compute.internal   <none>           <none>


===============================================================================================================
4. nginx 웹서버에 클라이언트 접속 가능하도록 서비스를 통한 단일 진입점을 구성하고 간단히 TEST
$ kubectl expose deployment  webserver --name=webserver-svc --port=80 --type=LoadBalancer
ubuntu@ip-10-250-1-198:~$ kubectl get svc
NAME         TYPE           CLUSTER-IP       EXTERNAL-IP                                                                    PORT(S)        AGE
kubernetes   ClusterIP      172.20.0.1       <none>                                                                         443/TCP        13m
webserver    LoadBalancer   172.20.100.109   aa98c206c61d44dcaab7669d388630e1-2052664679.ap-northeast-2.elb.amazonaws.com   80:30948/TCP   9s

1분정도 후에 웹브라우저를 통해 웹서버 연결되는지 확인  (nginx 홈페이지가 떠야 한다.)
http://aa98c206c61d44dcaab7669d388630e1-2052664679.ap-northeast-2.elb.amazonaws.com


